						<?php
//
// File generated by ... on the 2022-04-24T22:55:36+0200
// Please do not edit manually
//

/**
 * Classes and menus for teemip-network-mgmt (version 2.3.1)
 *
 * @author      iTop compiler
 * @license     http://opensource.org/licenses/AGPL-3.0
 */



class WANLink extends FunctionalCI
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel,searchable,configmgmt',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'organization_name'),
			'db_table' => 'wanlink',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'teemip-network-mgmt/images/wanlink.png',
			'obsolescence_expression' => 'status=\'obsolete\'',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeEnum("status", array("allowed_values"=>new ValueSetEnum("stock,implementation,production,obsolete"), "display_style"=>'list', "sql"=>'status', "default_value"=>'production', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("location_id1", array("targetclass"=>'Location', "allowed_values"=>new ValueSetObjects("SELECT Location AS l JOIN Organization AS child ON l.org_id = child.id JOIN Organization AS root ON child.parent_id BELOW root.id WHERE (root.id=:this->org_id OR root.id=:this->carrier_id)"), "sql"=>'location_id1', "is_null_allowed"=>true, "on_target_delete"=>DEL_MANUAL, "depends_on"=>array('org_id', 'carrier_id'), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("location_name1", array("allowed_values"=>null, "extkey_attcode"=>'location_id1', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("location_id2", array("targetclass"=>'Location', "allowed_values"=>new ValueSetObjects("SELECT Location AS l JOIN Organization AS child ON l.org_id = child.id JOIN Organization AS root ON child.parent_id BELOW root.id WHERE (root.id=:this->org_id OR root.id=:this->carrier_id)"), "sql"=>'location_id2', "is_null_allowed"=>true, "on_target_delete"=>DEL_MANUAL, "depends_on"=>array('org_id', 'carrier_id'), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("location_name2", array("allowed_values"=>null, "extkey_attcode"=>'location_id2', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("type_id", array("targetclass"=>'WANType', "allowed_values"=>new ValueSetObjects("SELECT WANType"), "sql"=>'type_id', "is_null_allowed"=>true, "on_target_delete"=>DEL_MANUAL, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("type_name", array("allowed_values"=>null, "extkey_attcode"=>'type_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("rate", array("allowed_values"=>null, "sql"=>'rate', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("burst_rate", array("allowed_values"=>null, "sql"=>'burst_rate', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("underlying_rate", array("allowed_values"=>null, "sql"=>'underlying_rate', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("networkinterface_id1", array("targetclass"=>'NetworkInterface', "allowed_values"=>null, "sql"=>'networkinterface_id1', "is_null_allowed"=>true, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("networkinterface_name1", array("allowed_values"=>null, "extkey_attcode"=>'networkinterface_id1', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("networkinterface_id2", array("targetclass"=>'NetworkInterface', "allowed_values"=>null, "sql"=>'networkinterface_id2', "is_null_allowed"=>true, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("networkinterface_name2", array("allowed_values"=>null, "extkey_attcode"=>'networkinterface_id2', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("carrier_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'carrier_id', "is_null_allowed"=>true, "on_target_delete"=>DEL_MANUAL, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("carrier_name", array("allowed_values"=>null, "extkey_attcode"=>'carrier_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("carrier_reference", array("allowed_values"=>null, "sql"=>'carrier_ref', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("internal_reference", array("allowed_values"=>null, "sql"=>'internal_reference', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDate("purchase_date", array("allowed_values"=>null, "sql"=>'purchase_date', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDate("renewal_date", array("allowed_values"=>null, "sql"=>'renewal_date', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDate("decommissioning_date", array("allowed_values"=>null, "sql"=>'decommissioning_date', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col3' => 
  array (
    'fieldset:Class:WANLink:dateinfo' => 
    array (
      0 => 'purchase_date',
      1 => 'move2production',
      2 => 'renewal_date',
      3 => 'decommissioning_date',
    ),
  ),
  'col:col1' => 
  array (
    'fieldset:Class:WANLink:baseinfo' => 
    array (
      0 => 'name',
      1 => 'org_id',
      2 => 'description',
      3 => 'status',
    ),
    'fieldset:Class:WANLink:admininfo' => 
    array (
      0 => 'carrier_id',
      1 => 'carrier_reference',
      2 => 'internal_reference',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Class:WANLink:locationinfo' => 
    array (
      0 => 'location_id1',
      1 => 'location_id2',
    ),
    'fieldset:Class:WANLink:networkinfo' => 
    array (
      0 => 'type_id',
      1 => 'rate',
      2 => 'burst_rate',
      3 => 'underlying_rate',
      4 => 'networkinterface_id1',
      5 => 'networkinterface_id2',
    ),
  ),
  0 => 'contacts_list',
  1 => 'documents_list',
  2 => 'tickets_list',
  3 => 'applicationsolution_list',
  4 => 'providercontracts_list',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'status',
  3 => 'type_id',
  4 => 'rate',
  5 => 'burst_rate',
  6 => 'underlying_rate',
  7 => 'carrier_id',
  8 => 'carrier_reference',
  9 => 'internal_reference',
  10 => 'purchase_date',
  11 => 'move2production',
  12 => 'renewal_date',
  13 => 'decommissioning_date',
));
		MetaModel::Init_SetZListItems('default_search', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'status',
  3 => 'type_id',
  4 => 'rate',
  5 => 'carrier_id',
  6 => 'renewal_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'status',
  1 => 'type_id',
  2 => 'rate',
  3 => 'location_id1',
  4 => 'location_id2',
  5 => 'carrier_id',
  6 => 'internal_reference',
  7 => 'networkinterface_id1',
  8 => 'networkinterface_id2',
  9 => 'org_id',
));

	}


}


class ASNumber extends FunctionalCI
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel,searchable,configmgmt',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'organization_name'),
			'db_table' => 'asnumber',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'teemip-network-mgmt/images/asnumber.png',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeDecimal("number", array("allowed_values"=>null, "sql"=>'number', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "digits"=>10, "decimals"=>0, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("registrar_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'registrar_id', "is_null_allowed"=>true, "on_target_delete"=>DEL_MANUAL, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("registrar_name", array("allowed_values"=>null, "extkey_attcode"=>'registrar_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeURL("whois", array("target"=>'', "allowed_values"=>null, "sql"=>'whois', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDate("validity_end", array("allowed_values"=>null, "sql"=>'validity_end', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDate("renewal_date", array("allowed_values"=>null, "sql"=>'renewal_date', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Class:ASNumber:baseinfo' => 
    array (
      0 => 'name',
      1 => 'number',
      2 => 'org_id',
      3 => 'description',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Class:ASNumber:admininfo' => 
    array (
      0 => 'registrar_id',
      1 => 'whois',
      2 => 'move2production',
      3 => 'validity_end',
      4 => 'renewal_date',
    ),
  ),
  0 => 'contacts_list',
  1 => 'documents_list',
  2 => 'providercontracts_list',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'number',
  2 => 'org_id',
  3 => 'registrar_id',
  4 => 'move2production',
  5 => 'validity_end',
  6 => 'renewal_date',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'number',
  1 => 'registrar_id',
  2 => 'validity_end',
  3 => 'org_id',
));

	}


}


class VRF extends FunctionalCI
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel,searchable,configmgmt',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'organization_name'),
			'db_table' => 'vrf',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'teemip-network-mgmt/images/vrf.png',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("route_dist", array("allowed_values"=>null, "sql"=>'route_dist', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("route_trgt", array("allowed_values"=>null, "sql"=>'route_trgt', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("subnets_list", array("linked_class"=>'lnkIPSubnetToVRF', "ext_key_to_me"=>'vrf_id', "ext_key_to_remote"=>'ipsubnet_id', "allowed_values"=>null, "count_min"=>0, "count_max"=>0, "duplicates"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("physicalinterfaces_list", array("linked_class"=>'lnkPhysicalInterfaceToVRF', "ext_key_to_me"=>'vrf_id', "ext_key_to_remote"=>'physicalinterface_id', "allowed_values"=>null, "count_min"=>0, "count_max"=>0, "duplicates"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'org_id',
  1 => 'name',
  2 => 'description',
  3 => 'route_dist',
  4 => 'route_trgt',
  5 => 'subnets_list',
  6 => 'physicalinterfaces_list',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'route_dist',
  3 => 'route_trgt',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'name',
  1 => 'route_dist',
  2 => 'route_trgt',
  3 => 'org_id',
));

	}


}


class WANType extends Typology
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel,searchable,configmgmt',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'state_attcode' => '',
			'reconc_keys' => array('name'),
			'db_table' => 'wantype',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("description", array("allowed_values"=>null, "sql"=>'description', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'name',
  1 => 'description',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'description',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'name',
  1 => 'description',
));

	}


}


abstract class DNSObject extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel,ipmgmt,dnsmgmt',
			'key_type' => 'autoincrement',
			'name_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name'),
			'db_table' => 'dnsobject',
			'db_key_field' => 'id',
			'db_finalclass_field' => 'finalclass',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("org_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'org_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_MANUAL, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("org_name", array("allowed_values"=>null, "extkey_attcode"=>'org_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDomainName("name", array("allowed_values"=>null, "sql"=>'name', "default_value"=>'', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("comment", array("allowed_values"=>null, "sql"=>'comment', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('default_search', array (
  0 => 'name',
  1 => 'org_id',
));

	}



 public static function ComputeFqdn($sName, $sZoneName)
	{
		// Note: $sZoneName attribut must be fully qualified

		$l = strlen($sZoneName);
		if (substr($sName, - 1) == '.')
		{
			if (substr_compare($sName, $sZoneName, - $l, $l) != 0)
			{
				$sName = $sName.$sZoneName;
			}
		}
		else
		{
			if (substr_compare($sName, $sZoneName, - $l + 1, $l - 1) != 0)
			{
				$sName = $sName.'.'.$sZoneName;			
			}
			else
			{
				$sName = $sName.'.';			
			}
		}
		return $sName;

	}

}



require_once('_domain.class.inc.php'); // Implementation of the class _Domain
class Domain extends _Domain
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel,searchable,dnsmgmt',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'org_name'),
			'db_table' => 'domain',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'teemip-network-mgmt/images/domain.png',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeHierarchicalKey("parent_id", array("allowed_values"=>new ValueSetObjects("SELECT Domain AS d WHERE d.org_id = :this->org_id"), "sql"=>'parent_id', "is_null_allowed"=>true, "on_target_delete"=>DEL_MOVEUP, "depends_on"=>array('org_id'), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("parent_name", array("allowed_values"=>null, "extkey_attcode"=>'parent_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("requestor_id", array("targetclass"=>'Person', "allowed_values"=>new ValueSetObjects("SELECT Person AS p WHERE p.org_id = :this->org_id"), "sql"=>'requestor_id', "is_null_allowed"=>true, "on_target_delete"=>DEL_MANUAL, "depends_on"=>array('org_id'), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("requestor_name", array("allowed_values"=>null, "extkey_attcode"=>'requestor_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDateTime("release_date", array("allowed_values"=>null, "sql"=>'release_date', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("registrar_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'registrar_id', "is_null_allowed"=>true, "on_target_delete"=>DEL_MANUAL, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("registrar_name", array("allowed_values"=>null, "extkey_attcode"=>'registrar_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDate("validity_start", array("allowed_values"=>null, "sql"=>'validity_start', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDate("validity_end", array("allowed_values"=>null, "sql"=>'validity_end', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("renewal", array("allowed_values"=>new ValueSetEnum("na,manual,automatic"), "display_style"=>'list', "sql"=>'renewal', "default_value"=>'na', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Class:Domain:baseinfo' => 
    array (
      0 => 'org_id',
      1 => 'parent_id',
      2 => 'name',
      3 => 'comment',
      4 => 'requestor_id',
      5 => 'release_date',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Class:Domain:admininfo' => 
    array (
      0 => 'registrar_id',
      1 => 'validity_start',
      2 => 'validity_end',
      3 => 'renewal',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'parent_id',
  2 => 'registrar_id',
  3 => 'validity_end',
  4 => 'renewal',
  5 => 'org_id',
  6 => 'requestor_id',
  7 => 'release_date',
));
		MetaModel::Init_SetZListItems('default_search', array (
  0 => 'name',
  1 => 'registrar_id',
  2 => 'org_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'parent_id',
  1 => 'comment',
  2 => 'registrar_id',
  3 => 'org_id',
));

	}


}


class lnkPhysicalInterfaceToVRF extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('physicalinterface_id', 'vrf_id'),
			'state_attcode' => '',
			'reconc_keys' => array('physicalinterface_id', 'vrf_id'),
			'db_table' => 'lnkphysicalinterfacetovrf',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("physicalinterface_id", array("targetclass"=>'PhysicalInterface', "allowed_values"=>null, "sql"=>'physicalinterface_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("physicalinterface_name", array("allowed_values"=>null, "extkey_attcode"=>'physicalinterface_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("physicalinterface_device_id", array("allowed_values"=>null, "extkey_attcode"=>'physicalinterface_id', "target_attcode"=>'connectableci_id', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("physicalinterface_device_name", array("allowed_values"=>null, "extkey_attcode"=>'physicalinterface_id', "target_attcode"=>'connectableci_name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("vrf_id", array("targetclass"=>'VRF', "allowed_values"=>null, "sql"=>'vrf_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("name", array("allowed_values"=>null, "extkey_attcode"=>'vrf_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'physicalinterface_id',
  1 => 'vrf_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'physicalinterface_id',
  1 => 'vrf_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'physicalinterface_id',
  1 => 'vrf_id',
));

	}


}