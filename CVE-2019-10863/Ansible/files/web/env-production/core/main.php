<?php
/**
 * This file was automatically generated by the compiler on 2022-04-24 22:55:35 -- DO NOT EDIT
 */

define('COMPILATION_TIMESTAMP', '1650833735.6125');
/**
 * Data model from the delta file
 */

//
// Menus
//
class MenuCreation_application extends ModuleHandlerAPI
{
	public static function OnMenuCreation()
	{
		global $__comp_menus__; // ensure that the global variable is indeed global !
	}
} // class MenuCreation_application

/**
 * Portal(s) definition(s) extracted from the XML definition at compile time
 */
class PortalDispatcherData
{
	protected static $aData = array (
  'legacy_portal' => 
  array (
    'rank' => 1.0,
    'handler' => 'PortalDispatcher',
    'url' => 'portal/index.php',
    'allow' => 
    array (
    ),
    'deny' => 
    array (
    ),
  ),
  'backoffice' => 
  array (
    'rank' => 2.0,
    'handler' => 'PortalDispatcher',
    'url' => 'pages/UI.php',
    'allow' => 
    array (
    ),
    'deny' => 
    array (
      0 => 'Portal user',
    ),
  ),
);

	public static function GetData($sPortalId = null)
	{
		if ($sPortalId === null) return self::$aData;
		if (!array_key_exists($sPortalId, self::$aData)) return array();
		return self::$aData[$sPortalId];
	}
}

/**
 * Modules parameters extracted from the XML definition at compile time
 */
class ModulesXMLParameters
{
	protected static $aData = array (
  'itop-portal' => 
  array (
    'lazy_loading_threshold' => '500',
  ),
);

	public static function GetData($sModuleId = null)
	{
		if ($sModuleId === null) return self::$aData;
		if (!array_key_exists($sModuleId, self::$aData)) return array();
		return self::$aData[$sModuleId];
	}
}

/**
 * Relations
 */
MetaModel::RegisterRelation('impacts');
